// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource sqlite {
  url      = env("DATABASE_URL")
  provider = "sqlite"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model User {
  id        String      @id @default(cuid())
  name      String      @unique @default("")
  slug      String      @unique @default("")
  email     String      @unique @default("")
  password  String
  notes     Note[]      @relation("Note_author")
  character Character[] @relation("Character_player")
}

model Note {
  id          String      @id @default(cuid())
  title       String      @default("")
  status      String?     @default("draft")
  content     String      @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  publishDate DateTime?
  author      User?       @relation("Note_author", fields: [authorId], references: [id])
  authorId    String?     @map("author")
  description String      @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  characters  Character[] @relation("Character_notes")
  factions    Faction[]   @relation("Faction_notes")
  locations   Location[]  @relation("Location_notes")
  tags        Tag[]       @relation("Note_tags")
  clocks      Clock[]     @relation("Clock_notes")

  @@index([authorId])
}

model Tag {
  id          String      @id @default(cuid())
  name        String      @unique @default("")
  slug        String      @unique @default("")
  description String      @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  characters  Character[] @relation("Character_tags")
  factions    Faction[]   @relation("Faction_tags")
  locations   Location[]  @relation("Location_tags")
  clocks      Clock[]     @relation("Clock_tags")
  notes       Note[]      @relation("Note_tags")
}

model Character {
  id               String     @id @default(cuid())
  name             String     @unique @default("")
  slug             String     @unique @default("")
  avatar_filesize  Int?
  avatar_extension String?
  avatar_width     Int?
  avatar_height    Int?
  avatar_mode      String?
  avatar_id        String?
  player           User?      @relation("Character_player", fields: [playerId], references: [id])
  playerId         String?    @map("player")
  description      String     @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  factions         Faction[]  @relation("Character_factions")
  locations        Location[] @relation("Character_locations")
  tags             Tag[]      @relation("Character_tags")
  clocks           Clock[]    @relation("Character_clocks")
  notes            Note[]     @relation("Character_notes")

  @@index([playerId])
}

model Faction {
  id                String      @id @default(cuid())
  name              String      @unique @default("")
  slug              String      @unique @default("")
  status            String?     @default("0")
  affiliations      String      @default("")
  tier              Int?
  hold              String?     @default("0")
  quiet_changes     String      @default("")
  dyer_interactions String      @default("")
  description       String      @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  characters        Character[] @relation("Character_factions")
  locations         Location[]  @relation("Faction_locations")
  tags              Tag[]       @relation("Faction_tags")
  clocks            Clock[]     @relation("Clock_factions")
  notes             Note[]      @relation("Faction_notes")
}

model Location {
  id                   String      @id @default(cuid())
  name                 String      @unique @default("")
  slug                 String      @unique @default("")
  picture_filesize     Int?
  picture_extension    String?
  picture_width        Int?
  picture_height       Int?
  picture_mode         String?
  picture_id           String?
  description          String      @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  characters           Character[] @relation("Character_locations")
  factions             Faction[]   @relation("Faction_locations")
  tags                 Tag[]       @relation("Location_tags")
  clocks               Clock[]     @relation("Clock_locations")
  notes                Note[]      @relation("Location_notes")
  within               Location?   @relation("Location_within", fields: [withinId], references: [id])
  withinId             String?     @map("within")
  from_Location_within Location[]  @relation("Location_within")

  @@index([withinId])
}

model Clock {
  id             String      @id @default(cuid())
  name           String      @unique @default("")
  slug           String      @unique @default("")
  piecesToFinish Int?
  piecesFilled   Int?
  description    String      @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  characters     Character[] @relation("Character_clocks")
  factions       Faction[]   @relation("Clock_factions")
  locations      Location[]  @relation("Clock_locations")
  tags           Tag[]       @relation("Clock_tags")
  notes          Note[]      @relation("Clock_notes")
}